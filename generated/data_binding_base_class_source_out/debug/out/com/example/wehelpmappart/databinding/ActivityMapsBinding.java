// Generated by view binder compiler. Do not edit!
package com.example.wehelpmappart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wehelpmappart.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button BHopistals;

  @NonNull
  public final Button BRestaurants;

  @NonNull
  public final Button BSchools;

  @NonNull
  public final Button BSearch;

  @NonNull
  public final Button BTo;

  @NonNull
  public final EditText TFLocation;

  private ActivityMapsBinding(@NonNull FrameLayout rootView, @NonNull Button BHopistals,
      @NonNull Button BRestaurants, @NonNull Button BSchools, @NonNull Button BSearch,
      @NonNull Button BTo, @NonNull EditText TFLocation) {
    this.rootView = rootView;
    this.BHopistals = BHopistals;
    this.BRestaurants = BRestaurants;
    this.BSchools = BSchools;
    this.BSearch = BSearch;
    this.BTo = BTo;
    this.TFLocation = TFLocation;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_maps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.B_hopistals;
      Button BHopistals = ViewBindings.findChildViewById(rootView, id);
      if (BHopistals == null) {
        break missingId;
      }

      id = R.id.B_restaurants;
      Button BRestaurants = ViewBindings.findChildViewById(rootView, id);
      if (BRestaurants == null) {
        break missingId;
      }

      id = R.id.B_schools;
      Button BSchools = ViewBindings.findChildViewById(rootView, id);
      if (BSchools == null) {
        break missingId;
      }

      id = R.id.B_search;
      Button BSearch = ViewBindings.findChildViewById(rootView, id);
      if (BSearch == null) {
        break missingId;
      }

      id = R.id.B_to;
      Button BTo = ViewBindings.findChildViewById(rootView, id);
      if (BTo == null) {
        break missingId;
      }

      id = R.id.TF_location;
      EditText TFLocation = ViewBindings.findChildViewById(rootView, id);
      if (TFLocation == null) {
        break missingId;
      }

      return new ActivityMapsBinding((FrameLayout) rootView, BHopistals, BRestaurants, BSchools,
          BSearch, BTo, TFLocation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
